{"version":3,"sources":["Sidebar.js","Editor.js","App.js","index.js"],"names":["Sidebar","notes","onAddNote","onDeleteNote","activeNote","setActiveNote","sortedNotes","sort","a","b","lastModified","className","onClick","map","note","id","title","Date","toLocaleDateString","hour12","hour","minute","Editor","onUpdateNote","onEditField","key","value","now","type","onChange","e","target","autoFocus","body","placeholder","children","App","useState","localStorage","JSON","parse","setNotes","useEffect","setItem","stringify","newNote","uuid","idToDelete","filter","find","updatedNote","updatedNotesArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOA2CeA,MA3Cf,YAAgF,IAA7DC,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,cAErDC,EAAcL,EAAMM,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAEC,aAAeF,EAAEE,gBAE3D,OAAO,sBAAKC,UAAU,cAAf,UAEH,sBAAKA,UAAU,qBAAf,UACI,uCACA,wBAAQC,QAASV,EAAjB,wBAGJ,qBAAKS,UAAU,oBAAf,SAEKL,EAAYO,KAAI,SAACC,GAAD,OACjB,sBACIH,UAAS,2BAAsBG,EAAKC,KAAOX,GAAc,UACzDQ,QAAS,kBAAKP,EAAcS,EAAKC,KAFrC,UAII,sBAAKJ,UAAU,qBAAf,UACI,iCAASG,EAAKE,QACd,wBAAQJ,QAAS,kBAAMT,EAAaW,EAAKC,KAAzC,uBAGJ,uBAGA,wBAAOJ,UAAU,YAAjB,4BACoB,IACf,IAAIM,KAAKH,EAAKJ,cAAcQ,mBAAmB,QAAS,CACzDC,QAAQ,EACRC,KAAM,UACNC,OAAQ,2B,sBCgBbC,MA7Cf,YAA8C,IAA5BlB,EAA2B,EAA3BA,WAAYmB,EAAe,EAAfA,aAEpBC,EAAc,SAACC,EAAKC,GAAS,IAAD,EAC9BH,EAAa,2BACNnB,GADK,uBAEPqB,EAAMC,GAFC,6BAGMT,KAAKU,OAHX,MAShB,OAAIvB,EAGG,sBAAKO,UAAU,aAAf,UAEH,sBAAKA,UAAU,mBAAf,UAEI,uBACIiB,KAAK,OACLb,GAAG,QACHW,MAAOtB,EAAWY,MAClBa,SAAU,SAACC,GAAD,OAAKN,EAAY,QAASM,EAAEC,OAAOL,QAC7CM,WAAS,IAGb,0BACIjB,GAAG,OACHW,MAAOtB,EAAW6B,KAClBC,YAAY,qBACZL,SAAU,SAACC,GAAD,OAAKN,EAAY,OAAQM,EAAEC,OAAOL,aAKpD,sBAAKf,UAAU,sBAAf,UACI,qBAAIA,UAAU,gBAAd,cAAgCP,EAAWY,MAA3C,OACA,cAAC,IAAD,CAAeL,UAAU,eAAewB,SA5B5B,OAAO/B,QAAP,IAAOA,OAAP,EAAOA,EAAY6B,aAG5B,qBAAKtB,UAAU,iBAAf,+BCmDAyB,MA5Df,WACE,MAA0BC,mBAASC,aAAarC,MAAQsC,KAAKC,MAAMF,aAAarC,OAAS,IAAzF,mBAAOA,EAAP,KAAcwC,EAAd,KAEA,EAAoCJ,oBAAS,GAA7C,mBAAOjC,EAAP,KAAmBC,EAAnB,KAqCA,OAnCAqC,qBAAU,WACRJ,aAAaK,QAAQ,QAASJ,KAAKK,UAAU3C,MAC5C,CAACA,IAkCF,sBAAKU,UAAU,MAAf,UAEE,cAAC,EAAD,CACEV,MAAOA,EACPC,UAlCY,WAChB,IAAM2C,EAAS,CACb9B,GAAI+B,MACJ9B,MAAO,WACPiB,KAAM,GACNvB,aAAcO,KAAKU,OAGrBc,EAAS,CAACI,GAAF,mBAAc5C,MA2BlBE,aAde,SAAC4C,GACpBN,EAASxC,EAAM+C,QAAO,SAAClC,GAAD,OAASA,EAAKC,KAAOgC,OAcvC3C,WAAYA,EACZC,cAAeA,IAGjB,cAAC,EAAD,CACED,WAfGH,EAAMgD,MAAK,SAACnC,GAAD,OAASA,EAAKC,KAAOX,KAgBnCmB,aA/Be,SAAC2B,GACpB,IAAMC,EAAoBlD,EAAMY,KAAI,SAACC,GACnC,OAAGA,EAAKC,KAAOX,EACN8C,EAEFpC,KAET2B,EAASU,UC/BbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.498619fc.chunk.js","sourcesContent":["function Sidebar({ notes, onAddNote, onDeleteNote, activeNote, setActiveNote }){\r\n    \r\n    const sortedNotes = notes.sort((a,b) => b.lastModified - a.lastModified);\r\n\r\n    return <div className=\"app-sidebar\">\r\n\r\n        <div className=\"app-sidebar-header\">\r\n            <h1>Notes</h1>\r\n            <button onClick={onAddNote}>ADD NEW</button>\r\n        </div>\r\n\r\n        <div className=\"app-sidebar-notes\">\r\n\r\n            {sortedNotes.map((note) => (\r\n            <div \r\n                className={`app-sidebar-note ${note.id === activeNote && \"active\"}`} \r\n                onClick={()=> setActiveNote(note.id)}>\r\n                \r\n                <div className=\"sidebar-note-title\">\r\n                    <strong>{note.title}</strong>\r\n                    <button onClick={() => onDeleteNote(note.id)}>Delete</button>\r\n                </div>\r\n\r\n                <br/>\r\n                {/* <p>{note.body && note.body.substr(0,20) + \"...\"}</p> */}\r\n\r\n                <small className=\"note-meta\">\r\n                    Last Modified: {\" \"}\r\n                    {new Date(note.lastModified).toLocaleDateString(\"en-GB\", {\r\n                    hour12: true,\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                    })}\r\n                    {/* {note.lastModified.toLocaleDateString() + \" \" + note.lastModified.toLocaleTimeString()}  */}\r\n                </small>\r\n                \r\n            </div>\r\n            ))}\r\n            \r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Sidebar;","import ReactMarkdown from 'react-markdown';\r\n\r\nfunction Editor({ activeNote, onUpdateNote }){\r\n\r\n    const onEditField = (key, value)=>{\r\n        onUpdateNote({\r\n            ...activeNote,\r\n            [key]: value,\r\n            lastModified: Date.now(),\r\n        });\r\n    };\r\n\r\n    const input = ()=>{ return activeNote?.body};\r\n\r\n    if(!activeNote) \r\n        return <div className=\"no-active-note\">No note selected</div>;\r\n    \r\n    return <div className=\"app-editor\">\r\n\r\n        <div className=\"editor-note-edit\">\r\n\r\n            <input \r\n                type=\"text\" \r\n                id=\"title\" \r\n                value={activeNote.title} \r\n                onChange={(e)=>onEditField(\"title\", e.target.value)} \r\n                autoFocus \r\n            />\r\n\r\n            <textarea \r\n                id=\"body\" \r\n                value={activeNote.body} \r\n                placeholder=\"Enter your text...\"\r\n                onChange={(e)=>onEditField(\"body\", e.target.value)}\r\n            />\r\n\r\n        </div>\r\n\r\n        <div className=\"editor-note-preview\">\r\n            <h1 className=\"preview-title\"> {activeNote.title} </h1>\r\n            <ReactMarkdown className=\"preview-body\" children={input()}/> \r\n            {/* {activeNote.body} </Markdown> */}\r\n        </div>\r\n        \r\n    </div>\r\n}\r\n\r\nexport default Editor;","import { useState, useEffect } from 'react';\nimport uuid from 'react-uuid';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Editor from './Editor';\n\nfunction App() {\n  const [notes, setNotes] = useState(localStorage.notes ? JSON.parse(localStorage.notes) : []);\n\n  const [activeNote, setActiveNote] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  // const d= new Date(Date.now());\n\n  const onAddNote = () =>{\n    const newNote ={\n      id: uuid(),\n      title: \"New note\",\n      body: \"\",\n      lastModified: Date.now(),\n    };\n\n    setNotes([newNote, ...notes]);\n  };\n\n  const onUpdateNote = (updatedNote) => {\n    const updatedNotesArray = notes.map((note) => {\n      if(note.id === activeNote){\n        return updatedNote;\n      }\n      return note;\n    })\n    setNotes(updatedNotesArray);\n  };\n\n  const onDeleteNote = (idToDelete) => {\n    setNotes(notes.filter((note)=> note.id !== idToDelete));\n  };\n\n  const getActiveNote = () => {\n    return notes.find((note)=> note.id === activeNote);\n  };\n\n  return (\n    <div className=\"App\">\n\n      <Sidebar \n        notes={notes} \n        onAddNote={onAddNote} \n        onDeleteNote={onDeleteNote} \n        activeNote={activeNote} \n        setActiveNote={setActiveNote}\n      />\n\n      <Editor \n        activeNote={getActiveNote()}\n        onUpdateNote={onUpdateNote} \n      />\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}